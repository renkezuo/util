需求：
5W奖池，可能同时会有超过5W人来访问。
分析下需求产生方案
业务：
	一共5W张奖券，其中可设置奖励数量，奖励获取阀值，比如一二三等奖，均匀分布在整个抽奖过程中。
	奖券的属性：级别/编号
	奖池的属性：总量，各级别奖券数量，各级别奖券对应的索引位置[默认随机/指定]，可抽取量，
技术：
	同时TCP的连接数[排队]
	同一张奖券的锁[逻辑锁]参考AbstractQueuedSynchronizer
	
架构设计
	一个奖池对象，池中有总量的奖券，默认总量的抽取量，各级别奖的数量，
	
	1、先设定好，索引对应的奖励和级别，按顺序取奖，或随机顺序取奖[把limit的索引内容填充到抽出的那个索引中，limit-1,ran.nextInt(limit)]
		需要控制奖券池的索引锁
	2、先得到奖券，根据奖券分配奖励
		需要控制奖励的锁

####忌浮躁，踏实点